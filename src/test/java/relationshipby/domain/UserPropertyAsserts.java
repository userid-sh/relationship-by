package relationshipby.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class UserPropertyAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserPropertyAllPropertiesEquals(UserProperty expected, UserProperty actual) {
        assertUserPropertyAutoGeneratedPropertiesEquals(expected, actual);
        assertUserPropertyAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserPropertyAllUpdatablePropertiesEquals(UserProperty expected, UserProperty actual) {
        assertUserPropertyUpdatableFieldsEquals(expected, actual);
        assertUserPropertyUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserPropertyAutoGeneratedPropertiesEquals(UserProperty expected, UserProperty actual) {
        assertThat(actual)
            .as("Verify UserProperty auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserPropertyUpdatableFieldsEquals(UserProperty expected, UserProperty actual) {
        assertThat(actual)
            .as("Verify UserProperty relevant properties")
            .satisfies(a -> assertThat(a.getStrValue()).as("check strValue").isEqualTo(expected.getStrValue()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserPropertyUpdatableRelationshipsEquals(UserProperty expected, UserProperty actual) {
        assertThat(actual)
            .as("Verify UserProperty relationships")
            .satisfies(a -> assertThat(a.getUser()).as("check user").isEqualTo(expected.getUser()))
            .satisfies(a -> assertThat(a.getDomainProperty()).as("check domainProperty").isEqualTo(expected.getDomainProperty()));
    }
}
