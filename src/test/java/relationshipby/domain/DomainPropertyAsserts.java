package relationshipby.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class DomainPropertyAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDomainPropertyAllPropertiesEquals(DomainProperty expected, DomainProperty actual) {
        assertDomainPropertyAutoGeneratedPropertiesEquals(expected, actual);
        assertDomainPropertyAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDomainPropertyAllUpdatablePropertiesEquals(DomainProperty expected, DomainProperty actual) {
        assertDomainPropertyUpdatableFieldsEquals(expected, actual);
        assertDomainPropertyUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDomainPropertyAutoGeneratedPropertiesEquals(DomainProperty expected, DomainProperty actual) {
        assertThat(actual)
            .as("Verify DomainProperty auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDomainPropertyUpdatableFieldsEquals(DomainProperty expected, DomainProperty actual) {
        assertThat(actual)
            .as("Verify DomainProperty relevant properties")
            .satisfies(a -> assertThat(a.getName()).as("check name").isEqualTo(expected.getName()))
            .satisfies(a -> assertThat(a.getMandatory()).as("check mandatory").isEqualTo(expected.getMandatory()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDomainPropertyUpdatableRelationshipsEquals(DomainProperty expected, DomainProperty actual) {
        assertThat(actual)
            .as("Verify DomainProperty relationships")
            .satisfies(a -> assertThat(a.getDomain()).as("check domain").isEqualTo(expected.getDomain()));
    }
}
